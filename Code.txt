/*
PRACTICED QUESTIONS:
NUMBER OF ISLAND
14TH JAN
https://practice.geeksforgeeks.org/problems/find-the-number-of-islands/1
https://practice.geeksforgeeks.org/problems/number-of-islands/1

Celebrity problem
https://leetcode.com/problems/find-the-town-judge/
https://leetcode.com/problems/find-the-celebrity/description/   (Premium only)

Detect cycle in undirected graph
i did it using both bfs and dfs
bfs
https://practice.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article


*/



//#include<bits/stdc++.h>
#include<iostream>
#include<vector>
using namespace std;

int main()
{
	int t;
	cin >> t;
	for (int test_case = 1; test_case <= t; ++test_case)
	{
		int N, x, y;
		cin >> N >> x >> y;

		int k;
		cin >> k;
		vector<int> vec(k);
		for (int i = 0; i < k; i++)
		{
			cin >> vec[i];
		}

		int dir = 0;
		int glass = 1;

		for (int i = 0; i < k; i++)
		{
			if (vec[i] == 1)
			{
				cout << "command_1 "<<endl;
				if (dir == 0)
				{
					cout << "MovUpward "<<endl;
					if (x < N && glass == 5)
					{
						cout<<"x_increased "<<endl;
						x = x + 1;
					}
					else if (1 < x && x<= N && glass != 5)
					{
						cout << "x_decreased "<<endl;
						x = x - 1;
					}
					else
					{
						cout << "change_glass "<<endl;
						if (glass == 1)
						{
							cout << "in_glass_5" << endl;
							glass = 5;
						}
						else if (glass == 2)
						{
							cout << "in_glass_5" << endl;
							glass = 5;
							x = 4;
							dir = 2;
							cout << "x =4, direction =down" << endl;
						}
						else if (glass == 3)
						{
							cout << "in_glass_5 " << endl;
							glass = 5;
							x = y;
							y = 4;
							dir = -1;
							cout << ", x =y, and y =4, direction =left" << endl;
						}
						else if (glass == 4)
						{
							cout << "in_glass_5 " << endl;
							glass = 5;
							int t = x;
							x = y;
							y = t;
							dir = 1;
							cout << "x, y swap, direction right" << endl;
						}
						else if (glass == 5)
						{
							cout << "in_glass_2 " << endl;
							glass = 2;
							dir = 2;
							x = 1;
							cout << "x is 1, direction is down" << endl;
						}
					}
				}
				else if (dir == 2)
				{
					cout << "MovDownward " << endl;
					if (1 < x && x<= N && glass == 5)
					{
						cout << "x_decreased" << endl;
						x = x - 1;
					}
					else if (x < N && glass != 5)
					{
						cout << "x_increased" << endl;
						x = x + 1;
					}
					else
					{
						cout << "command_ignored " << endl;
						if (glass == 5)
						{
							cout << "else in_glass_1" << endl;
							glass = 1;
						}
					}
				}
				else  if (dir == 1)
				{
					cout << "MovRight " << endl;
					if (1 < y <= N && glass == 4)
					{
						cout << "y_decreased " << endl;
						y = y - 1;
					}
					else if (y < N && glass != 4)
					{
						cout << "y_increased" << endl;
						y = y + 1;
					}
					else
					{
						cout << "changing_glass"<<endl;
						if (glass == 1)
						{
							cout << "in glass 3"<<endl;
							y = 1;
							glass = 3;
							cout << "y is 1 " << endl;
						}
						else if (glass == 2)
						{
							cout << "in_glass_4" << endl;
							glass = 4;
							y = 4;
							cout << "y is 4" << endl;
						}
						else if (glass == 3)
						{
							cout << "in_glass_2" << endl;
							glass = 2;

						}
						else if (glass == 4)
						{
							cout << "in_glass_1" << endl;
							glass = 1;
							////////code problem, no change in cooridnate
							//int t = x;
							//y = x;  
							//x = t;
							
						}
						else if (glass == 5)
						{
							cout << "in_glass_3" << endl;
							glass = 3;
							int t = x;
							x = 1;
							y = t;
							dir = 2;
							cout << "y=x, and x=1, direction is down" << endl;
						}
					}

				}

				else if (dir == -1)
				{
				cout << "moveLeft" << endl;
				cout << "y is " << y << " x is " << x;
					if (1 < y && y<= N && glass != 4)
					{
						cout << "y_decreased" << endl;
						y = y - 1;
					}
					else if (y < N && glass == 4)
					{
						cout << "y_increased" << endl;
						y = y + 1;
					}
					else
					{
						cout << "changeGlass" << endl;
						if (glass == 1)
						{
							cout << "in_glass_4" << endl;
							glass = 4;
						}
						else if (glass == 2)
						{
							cout << "in_glass_3" << endl;
							glass = 3;
						}
						else if (glass == 3)
						{
							cout << "in_glass_1" << endl;
							glass = 1;
							y = 4;
							cout << "y is 4" << endl;
						}
						else if (glass == 4)
						{
							cout << "in_glass_2" << endl;
							glass = 2;
							y = 1;
							cout << "y is 1" << endl;
						}
						else if (glass == 5)
						{
							cout << "in_glass_4" << endl;
							glass = 4;
							int t = x; x = y;
							y = t;
							dir = 2;
							cout << "x, y swapped, direction is downward" << endl;
						}
					}
				}

			}
			else if (vec[i] == 2)
			{
			cout << "command_turn_left" << endl;
				if (dir == 0)
					dir = -1;
				else if (dir == 1)
					dir = 0;
				else if (dir == -1)
					dir = 2;
				else if (dir == 2)
					dir = 1;
			}
			else if (vec[i] == 3)
			{
			cout << "command_turn_right" << endl;
				if (dir == 0)
					dir = 1;
				else if (dir == 1)
					dir = 2;
				else if (dir == -1)
					dir = 0;
				else if (dir == 2)
					dir = -1;
			}

		}
		cout << "#" << test_case << " " << glass << endl;
	}
	return 0;
}
